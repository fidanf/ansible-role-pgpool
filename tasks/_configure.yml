---
- name: Configure | Generated hashed passwords for Ansible
  set_fact: 
    pgpool_password_hashed: "{{ pgpool_password_cleartext | password_hash('sha512') }}"
    pgpool_postgres_password_hashed: "{{ pgpool_postgres_password_cleartext | password_hash('sha512') }}"

- name: Configure | Create pgpool group
  group:
    name: "{{ pgpool_group }}"
    state: present

- name: Configure | Ensure the user postgres is added the pgpool group
  user:
    name: postgres
    groups: "{{ pgpool_group }}"
    append: yes
    password: "{{ pgpool_postgres_password_hashed }}"
    update_password: always

- name: Configure | Create pgpool user
  user:
    name: "{{ pgpool_user }}"
    shell: /bin/bash
    home: "{{ pgpool_home_directory }}"
    password: "{{ pgpool_password_hashed }}"
    update_password: always
    group: "{{ pgpool_group }}"

- name: Configure | Update pgpool user's file permissions
  file:
    path: "{{ pgpool_home_directory }}"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0775
    recurse: yes

- name: Configure | Add sudo privileges for pgpool group
  template:
    src: sudoers.pgpool.j2
    dest: "/etc/sudoers.d/{{ pgpool_user }}"
    mode: 0644

- name: Configure | Create socket
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0775
  loop:
    - "{{ pgpool_socket_dir }}"
    - "{{ pgpool_pcp_socket_dir }}"
    - "{{ pgpool_wd_ipc_socket_dir }}"

- name: Configure | Upload pgpool.conf
  template:
    src: pgpool.conf.j2
    dest: "{{ pgpool_home_directory }}/pgpool.conf"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0775
  notify: reload pgpool2

- name: Configure | Upload pool_hba.conf
  template:
    src: pool_hba.conf.j2
    dest: "{{ pgpool_home_directory }}/pool_hba.conf"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0775
  when: 
    - pgpool_enable_pool_hba | bool 
    - pgpool_pool_hba_entries | length > 0

- name: Configure | Upload pcp.conf
  template:
    src: pcp.conf.j2
    dest: "{{ pgpool_home_directory }}/pcp.conf"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0775

- name: Configure | Upload .pcppass file (pgpool)
  template:
    src: pcppass.j2
    dest: "{{ pgpool_home_directory }}/.pcppass"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0600

- name: Configure | Upload .pcppass file (postgres)
  template:
    src: pcppass.j2
    dest: "{{ pgpool_postgresql_home_directory }}/.pcppass"
    owner: "{{ pgpool_postgresql_service_user }}"
    group: "{{ pgpool_postgresql_service_group }}"
    mode: 0600

- name: Configure | Upload .pgpass file for postgres user
  template:
    src: pgpass.j2
    dest: "{{ pgpool_postgresql_home_directory }}/.pgpass"
    owner: "{{ pgpool_postgresql_service_user }}"
    group: "{{ pgpool_postgresql_service_group }}"
    mode: 0600
    trim_blocks: no
  when: pgpool_pgpass_entries | length > 0

- name: Configure | Copy .bashrc
  copy:
    src: /etc/skel/.bashrc
    dest: "{{ pgpool_home_directory }}/.bashrc"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0600
    remote_src: yes

- name: Configure | Upload .bash_aliases file
  template:
    src: bash_aliases.j2
    dest: "{{ pgpool_home_directory }}/.bash_aliases"
    owner: "{{ pgpool_user }}"
    group: "{{ pgpool_group }}"
    mode: 0600

- name: Configure | Generate pool_passwd file using md5 auth method
  shell:
    cmd: |
      pg_md5 --md5auth --username={{ item.username }} {{ item.password }}
  loop: "{{ pgpool_passwd_users_md5 }}"
  when: pgpool_passwd_use_md5 | bool
  become_user: "{{ pgpool_user }}"
